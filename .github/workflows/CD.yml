name: CD

on:
  push:
    tags: 
      - '**'

env:
  CLIENT_PATH: ./AutoEmptyStandbyList.Client
  UNINSTALLER_PATH: ./AutoEmptyStandbyList.Uninstaller

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.x'

    - name: Clean Solution
      run: dotnet clean

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish
      run: |
        dotnet publish ${{ env.CLIENT_PATH }} -c Release -r win-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -o ./publish/client
        dotnet publish ${{ env.UNINSTALLER_PATH }} -c Release -r win-x64 -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -o ./publish/uninstall
    
    - name: Copy additional files
      run: |
        mkdir ./Release/scripts
        cp ./Scripts/* ./Release/scripts/
        cp ./publish/client/AutoEmptyStandbyList.Client.exe ./Release/
        cp ./publish/uninstall/AutoEmptyStandbyList.Uninstaller.exe ./Release/

    - name: Zip files
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r Release.zip ./Release

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: ./Release.zip
        asset_name: Release.zip
        asset_content_type: application/zip